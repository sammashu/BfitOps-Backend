// Code generated by protoc-gen-go. DO NOT EDIT.
// source: event/eventpb/event.proto

package eventpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Eventing struct {
	EventName            string   `protobuf:"bytes,1,opt,name=event_name,json=eventName,proto3" json:"event_name,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Eventing) Reset()         { *m = Eventing{} }
func (m *Eventing) String() string { return proto.CompactTextString(m) }
func (*Eventing) ProtoMessage()    {}
func (*Eventing) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c88e0126701e74a, []int{0}
}

func (m *Eventing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Eventing.Unmarshal(m, b)
}
func (m *Eventing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Eventing.Marshal(b, m, deterministic)
}
func (m *Eventing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Eventing.Merge(m, src)
}
func (m *Eventing) XXX_Size() int {
	return xxx_messageInfo_Eventing.Size(m)
}
func (m *Eventing) XXX_DiscardUnknown() {
	xxx_messageInfo_Eventing.DiscardUnknown(m)
}

var xxx_messageInfo_Eventing proto.InternalMessageInfo

func (m *Eventing) GetEventName() string {
	if m != nil {
		return m.EventName
	}
	return ""
}

func (m *Eventing) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type EventRequest struct {
	Eventing             *Eventing `protobuf:"bytes,1,opt,name=eventing,proto3" json:"eventing,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *EventRequest) Reset()         { *m = EventRequest{} }
func (m *EventRequest) String() string { return proto.CompactTextString(m) }
func (*EventRequest) ProtoMessage()    {}
func (*EventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c88e0126701e74a, []int{1}
}

func (m *EventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventRequest.Unmarshal(m, b)
}
func (m *EventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventRequest.Marshal(b, m, deterministic)
}
func (m *EventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventRequest.Merge(m, src)
}
func (m *EventRequest) XXX_Size() int {
	return xxx_messageInfo_EventRequest.Size(m)
}
func (m *EventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EventRequest proto.InternalMessageInfo

func (m *EventRequest) GetEventing() *Eventing {
	if m != nil {
		return m.Eventing
	}
	return nil
}

type EventResponse struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventResponse) Reset()         { *m = EventResponse{} }
func (m *EventResponse) String() string { return proto.CompactTextString(m) }
func (*EventResponse) ProtoMessage()    {}
func (*EventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c88e0126701e74a, []int{2}
}

func (m *EventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventResponse.Unmarshal(m, b)
}
func (m *EventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventResponse.Marshal(b, m, deterministic)
}
func (m *EventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventResponse.Merge(m, src)
}
func (m *EventResponse) XXX_Size() int {
	return xxx_messageInfo_EventResponse.Size(m)
}
func (m *EventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EventResponse proto.InternalMessageInfo

func (m *EventResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*Eventing)(nil), "event.Eventing")
	proto.RegisterType((*EventRequest)(nil), "event.EventRequest")
	proto.RegisterType((*EventResponse)(nil), "event.EventResponse")
}

func init() { proto.RegisterFile("event/eventpb/event.proto", fileDescriptor_7c88e0126701e74a) }

var fileDescriptor_7c88e0126701e74a = []byte{
	// 205 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4c, 0x2d, 0x4b, 0xcd,
	0x2b, 0xd1, 0x07, 0x93, 0x05, 0x49, 0x10, 0x5a, 0xaf, 0xa0, 0x28, 0xbf, 0x24, 0x5f, 0x88, 0x15,
	0xcc, 0x51, 0xf2, 0xe6, 0xe2, 0x70, 0x05, 0x31, 0x32, 0xf3, 0xd2, 0x85, 0x64, 0xb9, 0xb8, 0xc0,
	0x82, 0xf1, 0x79, 0x89, 0xb9, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x9c, 0x60, 0x11,
	0xbf, 0xc4, 0xdc, 0x54, 0x21, 0x05, 0x2e, 0xee, 0x94, 0xd4, 0xe2, 0xe4, 0xa2, 0xcc, 0x82, 0x92,
	0xcc, 0xfc, 0x3c, 0x09, 0x26, 0xb0, 0x3c, 0xb2, 0x90, 0x92, 0x35, 0x17, 0x0f, 0xd8, 0xb0, 0xa0,
	0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x6d, 0x2e, 0x8e, 0x54, 0xa8, 0xe1, 0x60, 0xe3, 0xb8,
	0x8d, 0xf8, 0xf5, 0x20, 0x6e, 0x80, 0xd9, 0x19, 0x04, 0x57, 0xa0, 0xa4, 0xce, 0xc5, 0x0b, 0xd5,
	0x5c, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x2a, 0x24, 0xc6, 0xc5, 0x56, 0x94, 0x5a, 0x5c, 0x9a, 0x53,
	0x02, 0x75, 0x0a, 0x94, 0x67, 0xe4, 0x02, 0xb5, 0x25, 0x38, 0xb5, 0xa8, 0x2c, 0x33, 0x39, 0x55,
	0xc8, 0x84, 0x8b, 0x15, 0xcc, 0x17, 0x12, 0x46, 0x36, 0x1c, 0xea, 0x06, 0x29, 0x11, 0x54, 0x41,
	0x88, 0xd9, 0x4a, 0x0c, 0x4e, 0x9c, 0x51, 0xec, 0xd0, 0x60, 0x49, 0x62, 0x03, 0x87, 0x88, 0x31,
	0x20, 0x00, 0x00, 0xff, 0xff, 0x26, 0x33, 0x5c, 0xc0, 0x2e, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EventServiceClient is the client API for EventService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventServiceClient interface {
	Event(ctx context.Context, in *EventRequest, opts ...grpc.CallOption) (*EventResponse, error)
}

type eventServiceClient struct {
	cc *grpc.ClientConn
}

func NewEventServiceClient(cc *grpc.ClientConn) EventServiceClient {
	return &eventServiceClient{cc}
}

func (c *eventServiceClient) Event(ctx context.Context, in *EventRequest, opts ...grpc.CallOption) (*EventResponse, error) {
	out := new(EventResponse)
	err := c.cc.Invoke(ctx, "/event.EventService/Event", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EventServiceServer is the server API for EventService service.
type EventServiceServer interface {
	Event(context.Context, *EventRequest) (*EventResponse, error)
}

func RegisterEventServiceServer(s *grpc.Server, srv EventServiceServer) {
	s.RegisterService(&_EventService_serviceDesc, srv)
}

func _EventService_Event_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).Event(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/Event",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).Event(ctx, req.(*EventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EventService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "event.EventService",
	HandlerType: (*EventServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Event",
			Handler:    _EventService_Event_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "event/eventpb/event.proto",
}
